{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","username","alt","src","name","email","CardList","cardArray","robots","map","robot","id","SearchBox","searchtext","searchChange","type","placeholder","value","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","e","target","fetch","then","response","json","users","console","log","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAeeA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,qDAAf,UACE,oBAAIA,UAAU,KAAd,SAAoBD,EAAME,WAC1B,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,EAAME,SAAhC,cACpB,gCACE,6BAAKF,EAAMK,OACX,4BAAIL,EAAMM,eCYHC,EAlBE,SAAC,GAIhB,IAAMC,EAJuB,EAAZC,OAIQC,KAAI,SAAAC,GAAK,OAAI,cAAC,EAAD,CAEpCN,KAAMM,EAAMN,KACZC,MAAOK,EAAML,MACbJ,SAAUS,EAAMT,UAHXS,EAAMC,OAMb,OACE,8BACGJ,KCAQK,EAdG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAC/B,OACC,qBAAKd,UAAU,MAAf,SACC,uBACKA,UAAU,kBACde,KAAK,SACLC,YAAY,eACRC,MAAOJ,EACXK,SAAUJ,OCACK,EARA,SAACpB,GACd,OACE,qBAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGxB,EAAMyB,YCkBEC,E,kDApBb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IACD2B,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,gDAGFG,KAAK/B,MAAMyB,a,GAhBKQ,aCqDZC,G,wDA9Cb,aAAe,IAAD,8BACZ,gBAiBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,WAAWsB,EAAEC,OAAOnB,SAjBnC,EAAKS,MAAQ,CACXlB,OAAQ,GACRK,WAAY,IAJF,E,qDAQd,WAAqB,IAAD,OAClBwB,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACfF,MAAK,SAAAG,GACN,EAAKV,SAAS,CAACvB,OAAQiC,IACvBC,QAAQC,IAAIF,Q,oBAQlB,WAAU,IAAD,OACDG,EAAiBd,KAAKJ,MAAMlB,OAAOqC,QAAO,SAAAnC,GAAK,OAAIA,EAAMT,SAAS6C,cAAcC,SAAS,EAAKrB,MAAMb,WAAWiC,kBAErH,OAAKhB,KAAKJ,MAAMlB,OAAOwC,OAKrB,sBAAKhD,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,WAAYiB,KAAKjB,WAAYC,aAAcgB,KAAKI,iBAC3D,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQoC,WATjB,gD,GA3BKZ,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0a430938.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 ps3 ma2 grow bw shadow-5\">\r\n      <h1 className=\"f3\">{props.username}</h1>\r\n      <img alt='robot' src={`https://robohash.org/${props.username}?200x200`} />\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  if (true) {\r\n    //throw new Error('Nooooo');\r\n  }\r\n  const cardArray = robots.map(robot => <Card \r\n    key={robot.id} \r\n    name={robot.name} \r\n    email={robot.email} \r\n    username={robot.username} \r\n  />)\r\n\r\n  return (\r\n    <div>\r\n      {cardArray}\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default CardList","import React from \"react\";\r\n\r\nconst SearchBox = ({searchtext, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n        className='pa3 ba b--green'\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search Robot\"\r\n        value={searchtext}\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Error Occurred</h1>\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n  \r\n}\r\n\r\nexport default ErrorBoundry;\r\n\r\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n//import { robots } from './robots';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchtext: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n        return response.json()\n      }).then(users => {\n        this.setState({robots: users})\n        console.log(users);\n      })\n  }\n\n  onSearchChange = (e) => {\n    this.setState({searchtext:e.target.value});\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => robot.username.toLowerCase().includes(this.state.searchtext.toLowerCase()));\n\n    if (!this.state.robots.length) {\n      return <h1>Loading...</h1>\n    }\n    \n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchtext={this.searchtext} searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        \n        </Scroll>\n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}